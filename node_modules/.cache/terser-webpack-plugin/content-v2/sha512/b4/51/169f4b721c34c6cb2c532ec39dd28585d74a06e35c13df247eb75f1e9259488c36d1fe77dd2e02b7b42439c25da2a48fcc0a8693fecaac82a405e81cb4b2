{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{336:function(s,a,t){\"use strict\";t.r(a);var e=t(33),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h2\",{attrs:{id:\"介绍\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#介绍\"}},[s._v(\"#\")]),s._v(\" 介绍\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"rabbitmq-是一个开源的消息代理和队列服务器，用来通过普通协议在完全不同的应用之间共享数据，rabbitmq-是使用-erlang-语言来编写的，并且-rabbitmq-是基于-amqp-协议的。\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rabbitmq-是一个开源的消息代理和队列服务器，用来通过普通协议在完全不同的应用之间共享数据，rabbitmq-是使用-erlang-语言来编写的，并且-rabbitmq-是基于-amqp-协议的。\"}},[s._v(\"#\")]),s._v(\" RabbitMQ 是一个开源的消息代理和队列服务器，用来通过普通协议在完全不同的应用之间共享数据，RabbitMQ 是使用 Erlang 语言来编写的，并且 RabbitMQ 是基于 AMQP 协议的。\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"环境安装\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#环境安装\"}},[s._v(\"#\")]),s._v(\" 环境安装\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"window\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#window\"}},[s._v(\"#\")]),s._v(\" Window\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"下载 Erlang https://www.erlang-solutions.com/resources/download.html\")]),s._v(\" \"),t(\"li\",[s._v(\"下载 RabbitMQ https://www.rabbitmq.com/download.html\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 安装服务\")]),s._v(\"\\nrabbitmq-service.bat \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"install\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 关闭服务\")]),s._v(\"\\nrabbitmq-service.bat stop\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 卸载服务\")]),s._v(\"\\nrabbitmq-service.bat remove\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 激活 rabbitmq_management\")]),s._v(\"\\nrabbitmq-plugins \"),t(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"enable\")]),s._v(\" rabbitmq_management\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"访问 web 管理界面\")])]),s._v(\" \"),t(\"p\",[s._v(\"地址：http://localhost:15672\\n默认用户名：guest （只能 localhost 登陆）\\n默认密码：guest\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"centos\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#centos\"}},[s._v(\"#\")]),s._v(\" Centos\")]),s._v(\" \"),t(\"p\",[s._v(\"参考：\"),t(\"a\",{attrs:{href:\"https://www.rabbitmq.com/which-erlang.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"https://www.rabbitmq.com/which-erlang.html\"),t(\"OutboundLink\")],1)]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"安装 ErLang\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"wget\")]),s._v(\" https://github.com/rabbitmq/erlang-rpm/releases/download/v22.2.4/erlang-22.2.4-1.el7.x86_64.rpm\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"rpm\")]),s._v(\" -ivh erlang-22.2.4-1.el7.x86_64.rpm\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"安装 socat\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"wget\")]),s._v(\" http://repo.iotti.biz/CentOS/7/x86_64/socat-1.7.3.2-5.el7.lux.x86_64.rpm\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"rpm\")]),s._v(\" -ivh socat-1.7.3.2-5.el7.lux.x86_64.rpm\\n\\nyum \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"install\")]),s._v(\" socat\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"安装 RabbitMQ\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"wget\")]),s._v(\" https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.8.2/rabbitmq-server-3.8.2-1.el7.noarch.rpm\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"rpm\")]),s._v(\" -ivh rabbitmq-server-3.8.2-1.el7.noarch.rpm\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"启动 RabbitMQ\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[s._v(\"systemctl start rabbitmq-server             \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 启动RabbitMQ\")]),s._v(\"\\nsystemctl \"),t(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"enable\")]),s._v(\" rabbitmq-server            \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 开机自启动RabbitMQ\")]),s._v(\"\\nsystemctl status rabbitmq-server            \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 查看状态\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 其他启动方式\")]),s._v(\"\\nrabbitmq-server                             \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 启动 RabbitMQ服务\")]),s._v(\"\\nrabbitmq-server -detached                   \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 后台启动 RabbitMQ服务\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"安装 web 管理页面插件(默认用户名密码 guest)\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[s._v(\"rabbitmq-plugins \"),t(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"enable\")]),s._v(\" rabbitmq_management\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"div\",{staticClass:\"custom-block warning\"},[t(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"WARNING\")]),s._v(\" \"),t(\"p\",[s._v(\"User can only log in via localhost\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"vim\")]),s._v(\" /usr/lib/rabbitmq/lib/rabbitmq_server-3.8.2/ebin/rabbit.app\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('#修改loopback_users，删除<<\"guest\">>')]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"loopback_users, \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\",\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"rabbitmq-配置\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rabbitmq-配置\"}},[s._v(\"#\")]),s._v(\" RabbitMQ 配置\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"添加用户并授权\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#添加用户\")]),s._v(\"\\nrabbitmqctl add_user admin \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"123456\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置用户角色\")]),s._v(\"\\nrabbitmqctl set_user_tags admin administrator\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#tag（administrator，monitoring，policymaker，management）\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置用户权限(接受来自所有Host的所有操作)\")]),s._v(\"\\nrabbitmqctl  set_permissions -p \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"/\"')]),s._v(\" admin \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'.*'\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'.*'\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'.*'\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#查看用户权限\")]),s._v(\"\\nrabbitmqctl list_user_permissions admin\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"删除用户\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[s._v(\"rabbitmqctl delete_user 用户名\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"修改密码\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[s._v(\"rabbitmqctl add_user 用户名 密码\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"查看当前用户列表\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language- line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v(\"rabbitmqctl list_users\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"配置用户远程访问\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#修改配置文件\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"vim\")]),s._v(\" /etc/rabbitmq/rabbitmq.config\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#保存以下内容\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"rabbit, \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"tcp_listeners, \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5672\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\", \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"loopback_users, \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"admin\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\".\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"开放端口\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#开放端口\")]),s._v(\"\\nfirewall-cmd --add-port\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5672\")]),s._v(\"/tcp --permanent\\nfirewall-cmd --add-port\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"15672\")]),s._v(\"/tcp --permanent\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#重新加载防火墙配置\")]),s._v(\"\\nfirewall-cmd --reload\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"docker-安装-rabbitmq\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#docker-安装-rabbitmq\"}},[s._v(\"#\")]),s._v(\" Docker 安装 RabbitMq\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"拉取镜像\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#拉取镜像\"}},[s._v(\"#\")]),s._v(\" 拉取镜像\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[s._v(\"docker pull rabbitmq:management\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"h4\",{attrs:{id:\"运行-rabbitmq\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#运行-rabbitmq\"}},[s._v(\"#\")]),s._v(\" 运行 RabbitMq\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"mkdir\")]),s._v(\" -p /home/docker/rabbitmq\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"cd\")]),s._v(\" /home/docker/rabbitmq\\n\\ndocker run -d --restart\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"always --hostname rabbitmq -p \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5672\")]),s._v(\":5672 -p \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"15672\")]),s._v(\":15672 -v \"),t(\"span\",{pre:!0,attrs:{class:\"token environment constant\"}},[s._v(\"$PWD\")]),s._v(\":/var/lib/rabbitmq -e \"),t(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[s._v(\"RABBITMQ_DEFAULT_USER\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"admin -e \"),t(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[s._v(\"RABBITMQ_DEFAULT_PASS\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"admin --name rabbitmq rabbitmq:management\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#mkdir -p /home/docker/rabbitmq/{conf,log,data}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#cd /home/docker/rabbitmq\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#docker run -d --restart=always --hostname rabbitmq -p 5672:5672 -p 15672:15672 -v $PWD/conf:/etc/rabbitmq/rabbitmq.conf -v $PWD/log:/var/log/rabbitmq -v $PWD/data:/var/lib/rabbitmq -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin --name rabbitmq rabbitmq:management\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"h2\",{attrs:{id:\"amqp-核心概念\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#amqp-核心概念\"}},[s._v(\"#\")]),s._v(\" AMQP 核心概念\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"Server：又称 Broker,接受客户端的连接，实现 AMQP 实体服务\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Connection：连接，应用程序与 Broker 的网络连接\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Channel：网络信道，几乎所有的操作都在 Channel 中进行，Channel 是进行消息读写的通道。客户端可建立多个 Channel，每个 Channel 代表一个会话任务。\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Message：消息，服务器和应用程序之间传送的数据，由 Properties 和 Body 组成。Properties 可以对消息进行修饰，比如消息的优先级、延迟等高级特性；Body 则就是消息体内容。\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Virtual host：虚拟地址，用于进行逻辑隔离，最上层的消息路由。一个 Virtual host 里面可以有若干个 Exchange 和 Queue，同一个 Virtual host 里面不能有相同名称的 Exchange 和 Queue\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Exchange：交换机，接收消息，根据路由键转发消息到绑定的队列\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Binding：Exchange 和 Queue 之间的虚拟连接，binding 中可以包含 routing key\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Routing key：一个路由规则，虚拟机可用它来确定如何路由一个特定消息\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Queue：也称为 Message Queue，消息队列，保存消息并将它们转发给消费者\")])])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"使用\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用\"}},[s._v(\"#\")]),s._v(\" 使用\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"基本操作\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本操作\"}},[s._v(\"#\")]),s._v(\" 基本操作\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 关闭应用\")]),s._v(\"\\nrabbitmqctl stop_app\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 启动应用\")]),s._v(\"\\nrabbitmqctl start_app\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 节点状态\")]),s._v(\"\\nrabbitmqctl status\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 添加用户\")]),s._v(\"\\nrabbitmqctl add_user username password\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 列出所有用户\")]),s._v(\"\\nrabbitmqctl list_users\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 删除用户\")]),s._v(\"\\nrabbitmqctl delete_user username\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 清除用户权限\")]),s._v(\"\\nrabbitmqctl clear_permissions -p vhostpath username\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 列出用户权限\")]),s._v(\"\\nrabbitmqctl list_user_permissions username\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 修改密码\")]),s._v(\"\\nrabbitmqctl change_password username newpassword\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 设置用户权限\")]),s._v(\"\\nrabbitmqctl set_permissions -p vhostpath username \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\".*\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\".*\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\".*\"')]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 创建虚拟主机\")]),s._v(\"\\nrabbitmqctl add_vhost vhostpath\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 列出所有虚拟主机\")]),s._v(\"\\nrabbitmqctl list_vhosts\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 列出虚拟主机上所有权限\")]),s._v(\"\\nrabbitmqctl list_permissions -p vhostpath\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 删除虚拟主机\")]),s._v(\"\\nrabbitmqctl delete_vhost vhostpath\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 查看所有队列信息\")]),s._v(\"\\nrabbitmqctl list_queues\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 清除队列里的消息\")]),s._v(\"\\nrabbitmqctl -p vhostpath purge_queue blue\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"高级操作\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#高级操作\"}},[s._v(\"#\")]),s._v(\" 高级操作\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 移除所有数据，要在rabbitmqctl stop_app之后使用\")]),s._v(\"\\nrabbitmqctl reset\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 组成集群命令\")]),s._v(\"\\nrabbitmqctl join_cluster \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\"clusternode\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"--ram\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 查看集群状态\")]),s._v(\"\\nrabbitmqctl cluster_status\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 修改集群节点的存储形式\")]),s._v(\"\\nrabbitmqctl change_cluster_node_type disc \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"ram\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 忘记节点 （摘除节点）\")]),s._v(\"\\nrabbitmqctl forget_cluster_node \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"--offline\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 修改节点名称\")]),s._v(\"\\nrabbitmqctl rename_cluster_node oldnode1 newnode1 \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"oldnode2\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"newnode2 \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\")])]),t(\"h2\",{attrs:{id:\"高级特性\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#高级特性\"}},[s._v(\"#\")]),s._v(\" 高级特性\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"消息如何保障-100-的投递成功\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#消息如何保障-100-的投递成功\"}},[s._v(\"#\")]),s._v(\" 消息如何保障 100% 的投递成功\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"什么是生产端的可靠性投递\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是生产端的可靠性投递\"}},[s._v(\"#\")]),s._v(\" 什么是生产端的可靠性投递\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"保障消息的成功发出\")]),s._v(\" \"),t(\"li\",[s._v(\"保障 MQ 节点的成功接收\")]),s._v(\" \"),t(\"li\",[s._v(\"发送端收到 MQ 节点(Broker)确认应答\")]),s._v(\" \"),t(\"li\",[s._v(\"完善的消息进行补偿机制\")])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"生产端-可靠性投递\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生产端-可靠性投递\"}},[s._v(\"#\")]),s._v(\" 生产端-可靠性投递\")]),s._v(\" \"),t(\"p\",[s._v(\"BAT/TMD 互联网大厂的解决方案：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"消息落库，对消息状态进行打标\")]),s._v(\" \"),t(\"li\",[s._v(\"消息的延迟投递，做二次确定，回调检查\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"幂等性\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#幂等性\"}},[s._v(\"#\")]),s._v(\" 幂等性\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"消费端-幂等性保障\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#消费端-幂等性保障\"}},[s._v(\"#\")]),s._v(\" 消费端-幂等性保障\")]),s._v(\" \"),t(\"p\",[s._v(\"在海量订单产生的业余高峰期，如何避免消息的重复消费问题？\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"消费端实现幂等性，就意味着，我们的消息永远不会消费多次，即使我们收到了多条一样的消息\")])]),s._v(\" \"),t(\"p\",[s._v(\"业界主流的幂等性操作：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"唯一 ID + 指纹码机制，利用数据库主键去重\\n\"),t(\"ul\",[t(\"li\",[s._v(\"SELECT COUNT(1) FROM T_ORFER WHERE ID = 唯一 ID + 指纹码\")]),s._v(\" \"),t(\"li\",[s._v(\"好处：实现简单\")]),s._v(\" \"),t(\"li\",[s._v(\"坏处：高并发下有数据库写入的性能瓶颈\")]),s._v(\" \"),t(\"li\",[s._v(\"解决方案：根据 ID 进行分库分表进行算法路由\")])])]),s._v(\" \"),t(\"li\",[s._v(\"利用 Redis 的原子性去实现\\n\"),t(\"ul\",[t(\"li\",[s._v(\"我们是否要进行数据落库，如果落库的话，关键解决问题是数据库和缓存如何做到原子性\\n\"),t(\"ul\",[t(\"li\",[s._v(\"如果不进行落库，那么都存储到缓存中，如何设置定时同步的策略\")])])])])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"confirm-确认消息\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#confirm-确认消息\"}},[s._v(\"#\")]),s._v(\" Confirm 确认消息\")]),s._v(\" \"),t(\"p\",[s._v(\"消息的确认，是指生产者投递消息后，如果 Broker 收到消息，则会给我们生产者一个应答\")]),s._v(\" \"),t(\"p\",[s._v(\"生产者进行应答，用来确定这条消息是否正常的发送到 Broker，这种方式也是消息的可靠性投递的核心保障\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"如何实现-confirm-确认消息\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#如何实现-confirm-确认消息\"}},[s._v(\"#\")]),s._v(\" 如何实现 Confirm 确认消息\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"在 channel 上开启确认模式：channel.confirmSelect()\")]),s._v(\" \"),t(\"li\",[s._v(\"在 channel 上添加监听：addConfirmListener，监听成功和失败的返回结果，根据具体的结果对消息进行重新发送，或记录日志等后续处理\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"return-消息机制\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#return-消息机制\"}},[s._v(\"#\")]),s._v(\" Return 消息机制\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"Return Listener 用于处理一些不可路由的消息\")]),s._v(\" \"),t(\"li\",[s._v(\"我们的消息生产者，通过指定一个 Exchange 和 Routingkey，把消息送达到某一个队列中去，然后我们的消费者监听队列，进行消费处理操作\")]),s._v(\" \"),t(\"li\",[s._v(\"但是在某些情况下，如果我们在发送消息的时候，当前的 exchange 不存在或者指定的路由 key 路由不到，这个时候如果我们需要监听这种不可达的消息，就要使用 Return Listener\")])]),s._v(\" \"),t(\"p\",[s._v(\"在基础 API 中有一个关键的配置项\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"Mandatory：如果为 true，则监听器会接收到路由不可达的消息，然后进行后续处理，如果为 false，那么 broker 端自动删除该消息\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"自定义消费者\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自定义消费者\"}},[s._v(\"#\")]),s._v(\" 自定义消费者\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"MyConsumer\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"extends\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"DefaultConsumer\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"MyConsumer\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Channel\")]),s._v(\" channel\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"super\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"channel\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Override\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"handleDelivery\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" consumerTag\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Envelope\")]),s._v(\" envelope\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" AMQP\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"BasicProperties\")]),s._v(\" properties\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"byte\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" body\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"throws\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"IOException\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"消费端限流\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#消费端限流\"}},[s._v(\"#\")]),s._v(\" 消费端限流\")]),s._v(\" \"),t(\"p\",[s._v(\"RabbitMQ 提供了一种 qos(服务质量保证)功能，即在非在自动确认消息的前提下，如果一定数目的消息(通过基于 consume 或者 channel 设置 Qos 的值)未被确认前，不进行消费新的消息\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"BasicQos\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"uint prefetchSize\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" ushort prefetchCount\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" bool global\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"prefetchSize：0\")]),s._v(\" \"),t(\"li\",[s._v(\"prefetchCount：会告诉 RabbitMQ 不要同时给一个消费者推送对于个消息，即一旦有 N 个消息还没有 ack，则该 consumer 将 block 掉，直到有消息 ack\")]),s._v(\" \"),t(\"li\",[s._v(\"global：true/false 是否将上面设置应用于 channel，简单点说，就是上面限制是 channel 级别的还是 consumer 级别\")]),s._v(\" \"),t(\"li\",[s._v(\"prefetchSize 和 global 这两项，RabbitMQ 没有实现，暂且不研究 prefetch_count 在 no_ack=false 的情况下生效，即在自动应答的情况下这两个值是不生效的\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"消费端-ack-与重回队列\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#消费端-ack-与重回队列\"}},[s._v(\"#\")]),s._v(\" 消费端 ACK 与重回队列\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"消费端-的手工-ack-和-nack\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#消费端-的手工-ack-和-nack\"}},[s._v(\"#\")]),s._v(\" 消费端 的手工 ACK 和 NACK\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"消费端进行消费的时候，如果由于业务异常我们可以进行日志的记录，然后进行补偿\")]),s._v(\" \"),t(\"li\",[s._v(\"如果由于服务器宕机等严重问题，那我们就需要手工进行 ACK 保障消费端消费成功\")])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"消费端的重回队列\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#消费端的重回队列\"}},[s._v(\"#\")]),s._v(\" 消费端的重回队列\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"消费端重回队列是为了对没有处理成功的消息，把消息重新会递给 Broker\")]),s._v(\" \"),t(\"li\",[s._v(\"一般我们在实际应用中，都会关闭重回队列，也就是设置为 False\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"ttl-队列-消息\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ttl-队列-消息\"}},[s._v(\"#\")]),s._v(\" TTL 队列/消息\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"TTL 是 Time to Live 的缩写，也就是生存时间\")]),s._v(\" \"),t(\"li\",[s._v(\"RabbitMQ 支持消息的过期时间，在消息发送时可以进行指定\")]),s._v(\" \"),t(\"li\",[s._v(\"RabbitMQ 支持队列的过期时间，从消息入队列开始计算，只要超过了队列的超时时间配置，那么消息会自动的清除\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"死信队列\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#死信队列\"}},[s._v(\"#\")]),s._v(\" 死信队列\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"死信队列：dlx，dead-letter-exchange\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#死信队列：dlx，dead-letter-exchange\"}},[s._v(\"#\")]),s._v(\" 死信队列：DLX，Dead-Letter-Exchange\")]),s._v(\" \"),t(\"p\",[s._v(\"利用 DLX，当消息在一个队列中变成死信(dead message)之后，他能被重新 publish 到另一个 Exchange，这个 Exchange 就是 DLX\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"消息变成死信几种情况\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#消息变成死信几种情况\"}},[s._v(\"#\")]),s._v(\" 消息变成死信几种情况\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"消息被拒绝(basic.reject/basic.nack)并且 requeue=false\")]),s._v(\" \"),t(\"li\",[s._v(\"消息 TTL 过期\")]),s._v(\" \"),t(\"li\",[s._v(\"队列达到最大长度\")])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"死信队列-2\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#死信队列-2\"}},[s._v(\"#\")]),s._v(\" 死信队列\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"DLX 也是一个正常的 Exchange，和一般的 Exchange 没有区别，他能在任何的队列上被指定，实际上就是设置某个队列的属性\")]),s._v(\" \"),t(\"li\",[s._v(\"当这个队列中有死信时，RabbitMQ 就会自动的将这个消息重新发布到设置的 Exchange 上去，进而被路由到另一个队列\")]),s._v(\" \"),t(\"li\",[s._v(\"可以监听这个队列中消息做相应的处理，这个特性可以弥补 RabbitMQ3.0 以前支持的 immediate 参数的功能\")])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"死信队列设置\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#死信队列设置\"}},[s._v(\"#\")]),s._v(\" 死信队列设置\")]),s._v(\" \"),t(\"p\",[s._v(\"首先要设置死信队列的 exchange 和 queue, 然后进行绑定\")]),s._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[s._v(\"Exchange : dlx.exchange\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Queue : dlx.queue\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"RoutingKey : #\")])])]),s._v(\" \"),t(\"p\",[s._v(\"然后正常声明交换机, 队列, 绑定, 只不过需要在队列加上一个扩展参数即可 : \"),t(\"code\",[s._v('arguments.put(\"x-dead-letter-exchange\", \"dlx.exchange\");')])]),s._v(\" \"),t(\"p\",[s._v(\"这样消息在过期，requeue，队列在达到最大长度时，消息就可以直接路由到死信队列\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"死信队列解决的问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#死信队列解决的问题\"}},[s._v(\"#\")]),s._v(\" 死信队列解决的问题\")]),s._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[s._v(\"列信息因消费不及时大量积压，消费方服务先处理不及时会影响到队列的生产者，进而会影响到所有消费此 topic 的队列\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"队列的消息超时后消失，生产者和消费者完全无感知，只能靠查落地存储的历史记录，很不方便同时业务无法再消费处理\")])])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"集群架构模式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#集群架构模式\"}},[s._v(\"#\")]),s._v(\" 集群架构模式\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"主备模式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#主备模式\"}},[s._v(\"#\")]),s._v(\" 主备模式\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"实现 RabbitMQ 的高可用集群，一般在并发和数据量不高的情况下，这种模型非常的好用且简单。主备模式也称之为 Warren 模式\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"主备模式：一种 warren(兔子窝)的模式，是一个主/备方案(主节点如果挂了，从节点提供服务而已，activemq 利用 zookeeper 做主/备一样)\")])])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"haproxy-配置\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#haproxy-配置\"}},[s._v(\"#\")]),s._v(\" HaProxy 配置\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v(\"listen  rabbitmq_cluster\\nbind 0.0.0.0:5672\\n#配置TCP模式\\nmode tcp\\n#简单的轮询\\nbalance roundrobin\\n#主节点\\nserver rabbitmq_1 172.18.0.2:5672 check inter 5000 rise 2 fall 2\\n#备用节点\\nserver rabbitmq_2 172.18.0.3:5672 backup check inter 5000 rise 2 fall 2\\n\\n#inter每隔5秒对RabbitMQ集群做健康检查，2次正确证明服务器可用，3次失败证明服务器不可用，并且配置主备机制\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"远程模式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#远程模式\"}},[s._v(\"#\")]),s._v(\" 远程模式\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"远程模式可以实现双活的一种模式，简称 Shovel 模式，所谓 Shovel 就是我们可以把消息进行不同数据中心的复制工作，我们可以跨地域的让两个 RabbitMQ 集群互联\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"远程模式：远程通信和复制，所谓 Shovel 就是我们可以把消息进行不同数据中心的复制工作，我们可以跨地域的让两个 RabbitMQ 集群互联\")])])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"shovel-集群的配置\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#shovel-集群的配置\"}},[s._v(\"#\")]),s._v(\" Shovel 集群的配置\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v(\"#启动RabbitMQ插件\\nrabbitmq-plugins enable amqp_client\\nrabbitmq-plugins enable rabbitmq_shovel\\n#创建rabbitmq.config文件\\ntouch /etc/rabbitmq/rabbitmq.config\\n#最后我们需要源服务器和目的地服务器都使用相同的配置文件(rabbitmq.config)\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"镜像模式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#镜像模式\"}},[s._v(\"#\")]),s._v(\" 镜像模式\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"集群模式非常经典的就是 Mirror 镜像，保证 100%数据不丢失，在实际工作中也是用的最多的。并且实现集群非常简单，一般互联网大厂都会构建这种镜像集群模式\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Mirror 镜像队列，目的是为了保证 RabbitMQ 数据的高可靠性解决方案，主要就是实现数据的同步，一般来讲是 2-3 个节点实现数据同步(对于 100%数据可靠性解决方案一般是 3 节点)\")])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"多活模式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#多活模式\"}},[s._v(\"#\")]),s._v(\" 多活模式\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"这种模式也是实现异地数据复制的主流模式，因为 Shovel 模式配置比较复制，所以一般来说实现异地集群都是使用这种双活或者多活模型来实现的。这种模型依赖 RabbitMQ 的 federation 插件，可以实现持续的可靠的 AMQP 数据通信，多活模式在实际配置与应用非常简单\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"RabbitMQ 部署架构采用双中心模式（多中心）在两套（或多套）数据中心各部署一套 RabbitMQ 集群，各中心的 RabbitMQ 服务需要为提供正常的消息业务外，中心之间还需要实现部分队列消息共享。\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"federation 插件是一个不需要构建 Cluster，而在 Brokers 之间传输消息的高性能插件，federation 可以在 brokers 或者 cluster 之间传输消息，连接的双方可以使用不同的 users 或者 virtual host 双方也可以使用不同版本的 erlang 或者 RabbitMQ 版本。federation 插件可以使用 AMQP 协议作为通讯协议，可以接受不连续的传输。\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Federation Exchanges，可以看成 Downstream 从 Upstream 主动拉取消息，但并不是拉取所有消息，必须是在 Downstream.上已经明确定义 Bindings 关系的 Exchange,也就是有实际的物理 Queue 来接收消息，才会从 Upstream 拉取消息到 Downstream。使用 AMQP 协议实施代理间通信，Downstream 会将绑定关系组合在一起， 绑定/解除绑定命令将发送到 Upstream 交换机。因此，FederationExchange 只接收具有订阅的消息.\")])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"集群配置文件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#集群配置文件\"}},[s._v(\"#\")]),s._v(\" 集群配置文件\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"关键参数配置\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关键参数配置\"}},[s._v(\"#\")]),s._v(\" 关键参数配置\")]),s._v(\" \"),t(\"p\",[s._v(\"参考：\"),t(\"a\",{attrs:{href:\"http://www.rabbitmq.com/configure.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"http://www.rabbitmq.com/configure.html\"),t(\"OutboundLink\")],1)]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"tcp_listerners 设置 rabbimq 的监听端口，默认为[5672]\")]),s._v(\" \"),t(\"li\",[s._v(\"disk_free_limit 磁盘低水位线，若磁盘容量低于指定值则停止接收数据，默认值为{mem_relative, 1.0},即与内存相关联 1：1，也可定制为多少 byte\")]),s._v(\" \"),t(\"li\",[s._v(\"vm_memory_high_watermark，设置内存低水位线，若低于该水位线，则开启流控机制，默认值是 0.4，即内存总量的 40%\")]),s._v(\" \"),t(\"li\",[s._v(\"hipe_compile 将部分 rabbimq 代码用 High Performance Erlang compiler 编译，可提升性能，该参数是实验性，若出现 erlang vm segfaults，应关掉\")]),s._v(\" \"),t(\"li\",[s._v(\"force_fine_statistics， 该参数属于 rabbimq_management，若为 true 则进行精细化的统计，但会影响性能\")])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"集群节点模式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#集群节点模式\"}},[s._v(\"#\")]),s._v(\" 集群节点模式\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"Disk 为磁盘存储模式\")]),s._v(\" \"),t(\"li\",[s._v(\"Ram 为内存存储模式\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"延迟队列插件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#延迟队列插件\"}},[s._v(\"#\")]),s._v(\" 延迟队列插件\")]),s._v(\" \"),t(\"ol\",[t(\"li\",[s._v(\"下载插件放到指定目录\")])]),s._v(\" \"),t(\"p\",[t(\"a\",{attrs:{href:\"https://www.rabbitmq.com/community-plugins.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"https://www.rabbitmq.com/community-plugins.html\"),t(\"OutboundLink\")],1)]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"cd\")]),s._v(\" /usr/lib/rabbitmq/lib/rabbitmq_server-3.8.2/plugins\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"wget\")]),s._v(\" https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/v3.8.0/rabbitmq_delayed_message_exchange-3.8.0.ez\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\")])]),t(\"ol\",{attrs:{start:\"2\"}},[t(\"li\",[s._v(\"启动插件\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[t(\"code\",[s._v(\"rabbitmq-plugins \"),t(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"enable\")]),s._v(\" rabbitmq_delayed_message_exchange\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"ol\",{attrs:{start:\"3\"}},[t(\"li\",[s._v(\"访问地址http://IP:15672/#/exchanges\")])])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}