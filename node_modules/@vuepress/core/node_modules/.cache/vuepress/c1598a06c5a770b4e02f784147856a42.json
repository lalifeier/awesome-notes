{"remainingRequest":"/home/lalifeier/project/awesome-notes/node_modules/babel-loader/lib/index.js??ref--3-1!/home/lalifeier/project/awesome-notes/node_modules/@vuepress/plugin-pwa/lib/SWUpdateEvent.js","dependencies":[{"path":"/home/lalifeier/project/awesome-notes/node_modules/@vuepress/plugin-pwa/lib/SWUpdateEvent.js","mtime":1597410074753},{"path":"/home/lalifeier/project/awesome-notes/node_modules/cache-loader/dist/cjs.js","mtime":1597409175378},{"path":"/home/lalifeier/project/awesome-notes/node_modules/babel-loader/lib/index.js","mtime":1596462250184}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmRlZmluZS1wcm9wZXJ0eSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9ob21lL2xhbGlmZWllci9wcm9qZWN0L2F3ZXNvbWUtbm90ZXMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9sYWxpZmVpZXIvcHJvamVjdC9hd2Vzb21lLW5vdGVzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7Cgp2YXIgU1dVcGRhdGVFdmVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gU1dVcGRhdGVFdmVudChyZWdpc3RyYXRpb24pIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTV1VwZGF0ZUV2ZW50KTsKCiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ3JlZ2lzdHJhdGlvbicsIHsKICAgICAgdmFsdWU6IHJlZ2lzdHJhdGlvbiwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfQogIC8qKgogICAqIENoZWNrIGlmIHRoZSBuZXcgc2VydmljZSB3b3JrZXIgZXhpc3RzIG9yIG5vdC4KICAgKi8KCgogIF9jcmVhdGVDbGFzcyhTV1VwZGF0ZUV2ZW50LCBbewogICAga2V5OiAidXBkYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlZ2lzdHJhdGlvbi51cGRhdGUoKTsKICAgIH0KICAgIC8qKgogICAgICogQWN0aXZhdGUgbmV3IHNlcnZpY2Ugd29ya2VyIHRvIHdvcmsgJ2xvY2F0aW9uLnJlbG9hZCgpJyB3aXRoIG5ldyBkYXRhLgogICAgICovCgogIH0sIHsKICAgIGtleTogInNraXBXYWl0aW5nIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBza2lwV2FpdGluZygpIHsKICAgICAgdmFyIHdvcmtlciA9IHRoaXMucmVnaXN0cmF0aW9uLndhaXRpbmc7CgogICAgICBpZiAoIXdvcmtlcikgewogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2coJ1t2dWVwcmVzczpzd10gRG9pbmcgd29ya2VyLnNraXBXYWl0aW5nKCkuJyk7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgdmFyIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTsKCiAgICAgICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdbdnVlcHJlc3M6c3ddIERvbmUgd29ya2VyLnNraXBXYWl0aW5nKCkuJyk7CgogICAgICAgICAgaWYgKGV2ZW50LmRhdGEuZXJyb3IpIHsKICAgICAgICAgICAgcmVqZWN0KGV2ZW50LmRhdGEuZXJyb3IpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVzb2x2ZShldmVudC5kYXRhKTsKICAgICAgICAgIH0KICAgICAgICB9OwoKICAgICAgICB3b3JrZXIucG9zdE1lc3NhZ2UoewogICAgICAgICAgdHlwZTogJ3NraXAtd2FpdGluZycKICAgICAgICB9LCBbY2hhbm5lbC5wb3J0Ml0pOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBTV1VwZGF0ZUV2ZW50Owp9KCk7CgpleHBvcnQgeyBTV1VwZGF0ZUV2ZW50IGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/home/lalifeier/project/awesome-notes/node_modules/@vuepress/plugin-pwa/lib/SWUpdateEvent.js"],"names":["SWUpdateEvent","registration","Object","defineProperty","value","configurable","writable","update","worker","waiting","Promise","resolve","console","log","reject","channel","MessageChannel","port1","onmessage","event","data","error","postMessage","type","port2"],"mappings":";;;;;IAAqBA,a;AACnB,yBAAaC,YAAb,EAA2B;AAAA;;AACzBC,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,cAA5B,EAA4C;AAC1CC,MAAAA,KAAK,EAAEH,YADmC;AAE1CI,MAAAA,YAAY,EAAE,IAF4B;AAG1CC,MAAAA,QAAQ,EAAE;AAHgC,KAA5C;AAKD;AAED;;;;;;;6BAGU;AACR,aAAO,KAAKL,YAAL,CAAkBM,MAAlB,EAAP;AACD;AAED;;;;;;kCAGe;AACb,UAAMC,MAAM,GAAG,KAAKP,YAAL,CAAkBQ,OAAjC;;AACA,UAAI,CAACD,MAAL,EAAa;AACX,eAAOE,OAAO,CAACC,OAAR,EAAP;AACD;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACA,aAAO,IAAIH,OAAJ,CAAY,UAACC,OAAD,EAAUG,MAAV,EAAqB;AACtC,YAAMC,OAAO,GAAG,IAAIC,cAAJ,EAAhB;;AAEAD,QAAAA,OAAO,CAACE,KAAR,CAAcC,SAAd,GAA0B,UAACC,KAAD,EAAW;AACnCP,UAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;;AACA,cAAIM,KAAK,CAACC,IAAN,CAAWC,KAAf,EAAsB;AACpBP,YAAAA,MAAM,CAACK,KAAK,CAACC,IAAN,CAAWC,KAAZ,CAAN;AACD,WAFD,MAEO;AACLV,YAAAA,OAAO,CAACQ,KAAK,CAACC,IAAP,CAAP;AACD;AACF,SAPD;;AASAZ,QAAAA,MAAM,CAACc,WAAP,CAAmB;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAnB,EAA6C,CAACR,OAAO,CAACS,KAAT,CAA7C;AACD,OAbM,CAAP;AAcD;;;;;;SAxCkBxB,a","sourcesContent":["export default class SWUpdateEvent {\n  constructor (registration) {\n    Object.defineProperty(this, 'registration', {\n      value: registration,\n      configurable: true,\n      writable: true\n    })\n  }\n\n  /**\n   * Check if the new service worker exists or not.\n   */\n  update () {\n    return this.registration.update()\n  }\n\n  /**\n   * Activate new service worker to work 'location.reload()' with new data.\n   */\n  skipWaiting () {\n    const worker = this.registration.waiting\n    if (!worker) {\n      return Promise.resolve()\n    }\n\n    console.log('[vuepress:sw] Doing worker.skipWaiting().')\n    return new Promise((resolve, reject) => {\n      const channel = new MessageChannel()\n\n      channel.port1.onmessage = (event) => {\n        console.log('[vuepress:sw] Done worker.skipWaiting().')\n        if (event.data.error) {\n          reject(event.data.error)\n        } else {\n          resolve(event.data)\n        }\n      }\n\n      worker.postMessage({ type: 'skip-waiting' }, [channel.port2])\n    })\n  }\n}\n\n"]}]}