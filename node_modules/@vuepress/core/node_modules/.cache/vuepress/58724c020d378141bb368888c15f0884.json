{"remainingRequest":"/home/lalifeier/project/awesome-notes/node_modules/babel-loader/lib/index.js??ref--3-1!/home/lalifeier/project/awesome-notes/node_modules/@vuepress/core/lib/client/serverEntry.js","dependencies":[{"path":"/home/lalifeier/project/awesome-notes/node_modules/@vuepress/core/lib/client/serverEntry.js","mtime":1597409174579},{"path":"/home/lalifeier/project/awesome-notes/node_modules/cache-loader/dist/cjs.js","mtime":1597409175378},{"path":"/home/lalifeier/project/awesome-notes/node_modules/babel-loader/lib/index.js","mtime":1596462250184}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiL2hvbWUvbGFsaWZlaWVyL3Byb2plY3QvYXdlc29tZS1ub3Rlcy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICIvaG9tZS9sYWxpZmVpZXIvcHJvamVjdC9hd2Vzb21lLW5vdGVzL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5qcyI7CmltcG9ydCAiL2hvbWUvbGFsaWZlaWVyL3Byb2plY3QvYXdlc29tZS1ub3Rlcy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ24uanMiOwppbXBvcnQgIi9ob21lL2xhbGlmZWllci9wcm9qZWN0L2F3ZXNvbWUtbm90ZXMvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmZpbmFsbHkuanMiOwppbXBvcnQgeyBjcmVhdGVBcHAgfSBmcm9tICcuL2FwcCc7CmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoY29udGV4dCkgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBjcmVhdGVBcHAodHJ1ZQogICAgLyogaXNTZXJ2ZXIgKi8KICAgICkudGhlbihmdW5jdGlvbiAoX3JlZikgewogICAgICB2YXIgYXBwID0gX3JlZi5hcHAsCiAgICAgICAgICByb3V0ZXIgPSBfcmVmLnJvdXRlcjsKICAgICAgdmFyIHVybCA9IGNvbnRleHQudXJsOwogICAgICB2YXIgZnVsbFBhdGggPSByb3V0ZXIucmVzb2x2ZSh1cmwpLnJvdXRlLmZ1bGxQYXRoOwoKICAgICAgaWYgKGZ1bGxQYXRoICE9PSB1cmwpIHsKICAgICAgICByZXR1cm4gcmVqZWN0KHsKICAgICAgICAgIHVybDogZnVsbFBhdGgKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcm91dGVyLnB1c2godXJsKTsKICAgICAgcm91dGVyLm9uUmVhZHkoZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiByZXNvbHZlKGFwcCk7CiAgICAgIH0pOwogICAgfSk7CiAgfSk7Cn0pOw=="},{"version":3,"sources":["/home/lalifeier/project/awesome-notes/node_modules/@vuepress/core/lib/client/serverEntry.js"],"names":["createApp","context","Promise","resolve","reject","then","app","router","url","fullPath","route","push","onReady"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,gBAAe,UAAAC,OAAO;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACzDJ,IAAAA,SAAS,CAAC;AAAK;AAAN,KAAT,CAA+BK,IAA/B,CAAoC,gBAAqB;AAAA,UAAlBC,GAAkB,QAAlBA,GAAkB;AAAA,UAAbC,MAAa,QAAbA,MAAa;AAAA,UAC/CC,GAD+C,GACvCP,OADuC,CAC/CO,GAD+C;AAAA,UAE/CC,QAF+C,GAElCF,MAAM,CAACJ,OAAP,CAAeK,GAAf,EAAoBE,KAFc,CAE/CD,QAF+C;;AAIvD,UAAIA,QAAQ,KAAKD,GAAjB,EAAsB;AACpB,eAAOJ,MAAM,CAAC;AAAEI,UAAAA,GAAG,EAAEC;AAAP,SAAD,CAAb;AACD;;AAEDF,MAAAA,MAAM,CAACI,IAAP,CAAYH,GAAZ;AACAD,MAAAA,MAAM,CAACK,OAAP,CAAe;AAAA,eAAMT,OAAO,CAACG,GAAD,CAAb;AAAA,OAAf;AACD,KAVD;AAWD,GAZyB,CAAJ;AAAA,CAAtB","sourcesContent":["import { createApp } from './app'\n\nexport default context => new Promise((resolve, reject) => {\n  createApp(true /* isServer */).then(({ app, router }) => {\n    const { url } = context\n    const { fullPath } = router.resolve(url).route\n\n    if (fullPath !== url) {\n      return reject({ url: fullPath })\n    }\n\n    router.push(url)\n    router.onReady(() => resolve(app))\n  })\n})\n"]}]}